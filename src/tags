!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
AOps	cvl1qc.cpp	/^	CvMatOps AOps;$/;"	m	struct:__anon1	file:	access:public
AOps	cvl1qc.cpp	/^	CvMatOps AOps;$/;"	m	struct:__anon2	file:	access:public
AR	cvl1qc.cpp	/^	CvMat* AR;$/;"	m	struct:__anon1	file:	access:public
AR	cvl1qc.cpp	/^	CvMat* AR;$/;"	m	struct:__anon2	file:	access:public
AtOps	cvl1qc.cpp	/^	CvMatOps AtOps;$/;"	m	struct:__anon1	file:	access:public
AtOps	cvl1qc.cpp	/^	CvMatOps AtOps;$/;"	m	struct:__anon2	file:	access:public
AtR	cvl1qc.cpp	/^	CvMat* AtR;$/;"	m	struct:__anon1	file:	access:public
AtR	cvl1qc.cpp	/^	CvMat* AtR;$/;"	m	struct:__anon2	file:	access:public
CXX	makefile	/^CXX = g++$/;"	m
CXXFLAGS	makefile	/^CXXFLAGS = -O3 --fast-math -msse2$/;"	m
CvAAtOpsData	cvl1qc.cpp	/^} CvAAtOpsData;$/;"	t	typeref:struct:__anon1	file:
CvH11OpsData	cvl1qc.cpp	/^} CvH11OpsData;$/;"	t	typeref:struct:__anon2	file:
CvMatOps	cvcgsolve.h	/^typedef void (*CvMatOps) ( CvMat*, CvMat*, void* );$/;"	t
INCFLAGS	makefile	/^INCFLAGS = -I"$(OPENCV)\/include\/opencv"$/;"	m
LINKFLAG	makefile	/^LINKFLAG = -ldl -lpthread -lrt -lcv $/;"	m
OPENCV	makefile	/^OPENCV = \/opt\/opencv$/;"	m
_GUARD_cvcgsolve_h_	cvcgsolve.h	2;"	d
_GUARD_cvl1qc_h_	cvl1qc.h	2;"	d
__anon1::AOps	cvl1qc.cpp	/^	CvMatOps AOps;$/;"	m	struct:__anon1	file:	access:public
__anon1::AR	cvl1qc.cpp	/^	CvMat* AR;$/;"	m	struct:__anon1	file:	access:public
__anon1::AtOps	cvl1qc.cpp	/^	CvMatOps AtOps;$/;"	m	struct:__anon1	file:	access:public
__anon1::AtR	cvl1qc.cpp	/^	CvMat* AtR;$/;"	m	struct:__anon1	file:	access:public
__anon1::userdata	cvl1qc.cpp	/^	void* userdata;$/;"	m	struct:__anon1	file:	access:public
__anon2::AOps	cvl1qc.cpp	/^	CvMatOps AOps;$/;"	m	struct:__anon2	file:	access:public
__anon2::AR	cvl1qc.cpp	/^	CvMat* AR;$/;"	m	struct:__anon2	file:	access:public
__anon2::AtOps	cvl1qc.cpp	/^	CvMatOps AtOps;$/;"	m	struct:__anon2	file:	access:public
__anon2::AtR	cvl1qc.cpp	/^	CvMat* AtR;$/;"	m	struct:__anon2	file:	access:public
__anon2::atr	cvl1qc.cpp	/^	CvMat* atr;$/;"	m	struct:__anon2	file:	access:public
__anon2::fe_inv	cvl1qc.cpp	/^	double fe_inv;$/;"	m	struct:__anon2	file:	access:public
__anon2::fe_inv_2	cvl1qc.cpp	/^	double fe_inv_2;$/;"	m	struct:__anon2	file:	access:public
__anon2::sigx	cvl1qc.cpp	/^	CvMat* sigx;$/;"	m	struct:__anon2	file:	access:public
__anon2::userdata	cvl1qc.cpp	/^	void* userdata;$/;"	m	struct:__anon2	file:	access:public
atr	cvl1qc.cpp	/^	CvMat* atr;$/;"	m	struct:__anon2	file:	access:public
cvCGSolve	cvcgsolve.cpp	/^double cvCGSolve( CvMat* A, CvMat* B, CvMat* X, CvTermCriteria term_crit )$/;"	f	signature:( CvMat* A, CvMat* B, CvMat* X, CvTermCriteria term_crit )
cvCGSolve	cvcgsolve.cpp	/^double cvCGSolve( CvMatOps AOps, void* userdata, CvMat* B, CvMat* X, CvTermCriteria term_crit )$/;"	f	signature:( CvMatOps AOps, void* userdata, CvMat* B, CvMat* X, CvTermCriteria term_crit )
cvCGSolve	cvcgsolve.h	/^double cvCGSolve( CvMat* A, CvMat* B, CvMat* X, CvTermCriteria term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) );$/;"	p	signature:( CvMat* A, CvMat* B, CvMat* X, CvTermCriteria term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) )
cvCGSolve	cvcgsolve.h	/^double cvCGSolve( CvMatOps AOps, void* userdata, CvMat* B, CvMat* X, CvTermCriteria term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) );$/;"	p	signature:( CvMatOps AOps, void* userdata, CvMat* B, CvMat* X, CvTermCriteria term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) )
cvL1QCSolve	cvl1qc.cpp	/^int cvL1QCSolve( CvMat* A, CvMat* B, CvMat* X, double epsilon, double mu, CvTermCriteria lb_term_crit, CvTermCriteria cg_term_crit )$/;"	f	signature:( CvMat* A, CvMat* B, CvMat* X, double epsilon, double mu, CvTermCriteria lb_term_crit, CvTermCriteria cg_term_crit )
cvL1QCSolve	cvl1qc.cpp	/^int cvL1QCSolve( CvMatOps AOps, CvMatOps AtOps, void* userdata, CvMat* B, CvMat* X, double epsilon, double mu, CvTermCriteria lb_term_crit, CvTermCriteria cg_term_crit )$/;"	f	signature:( CvMatOps AOps, CvMatOps AtOps, void* userdata, CvMat* B, CvMat* X, double epsilon, double mu, CvTermCriteria lb_term_crit, CvTermCriteria cg_term_crit )
cvL1QCSolve	cvl1qc.h	/^int cvL1QCSolve( CvMat* A, CvMat* B, CvMat* X, double epsilon, double mu = 10., CvTermCriteria lb_term_crit = cvTermCriteria( CV_TERMCRIT_EPS, 0, 1e-3 ), CvTermCriteria cg_term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) );$/;"	p	signature:( CvMat* A, CvMat* B, CvMat* X, double epsilon, double mu = 10., CvTermCriteria lb_term_crit = cvTermCriteria( CV_TERMCRIT_EPS, 0, 1e-3 ), CvTermCriteria cg_term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) )
cvL1QCSolve	cvl1qc.h	/^int cvL1QCSolve( CvMatOps AOps, CvMatOps AtOps, void* userdata, CvMat* B, CvMat* X, double epsilon, double mu = 10., CvTermCriteria lb_term_crit = cvTermCriteria( CV_TERMCRIT_EPS, 0, 1e-3 ), CvTermCriteria cg_term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) );$/;"	p	signature:( CvMatOps AOps, CvMatOps AtOps, void* userdata, CvMat* B, CvMat* X, double epsilon, double mu = 10., CvTermCriteria lb_term_crit = cvTermCriteria( CV_TERMCRIT_EPS, 0, 1e-3 ), CvTermCriteria cg_term_crit = cvTermCriteria( CV_TERMCRIT_ITER + CV_TERMCRIT_EPS, 200, 1e-16 ) )
fe_inv	cvl1qc.cpp	/^	double fe_inv;$/;"	m	struct:__anon2	file:	access:public
fe_inv_2	cvl1qc.cpp	/^	double fe_inv_2;$/;"	m	struct:__anon2	file:	access:public
icvAAtOps	cvl1qc.cpp	/^static void icvAAtOps( CvMat* X, CvMat* Y, void* userdata )$/;"	f	file:	signature:( CvMat* X, CvMat* Y, void* userdata )
icvH11Ops	cvl1qc.cpp	/^static void icvH11Ops( CvMat* X, CvMat* Y, void* userdata )$/;"	f	file:	signature:( CvMat* X, CvMat* Y, void* userdata )
icvL1QCNewton	cvl1qc.cpp	/^static int icvL1QCNewton( CvAAtOpsData& AAtData, CvMat* B, CvMat* X, CvMat* U, double epsilon, double tau, CvTermCriteria nt_term_crit, CvTermCriteria cg_term_crit )$/;"	f	file:	signature:( CvAAtOpsData& AAtData, CvMat* B, CvMat* X, CvMat* U, double epsilon, double tau, CvTermCriteria nt_term_crit, CvTermCriteria cg_term_crit )
icvL1QCNewton	cvl1qc.cpp	/^static int icvL1QCNewton( CvMat* A, CvMat* B, CvMat* X, CvMat* U, double epsilon, double tau, CvTermCriteria nt_term_crit, CvTermCriteria cg_term_crit )$/;"	f	file:	signature:( CvMat* A, CvMat* B, CvMat* X, CvMat* U, double epsilon, double tau, CvTermCriteria nt_term_crit, CvTermCriteria cg_term_crit )
icvMatMulOps	cgsolve_test.cpp	/^void icvMatMulOps( CvMat* X, CvMat* Y, void* userdata )$/;"	f	signature:( CvMat* X, CvMat* Y, void* userdata )
main	cgsolve_test.cpp	/^int main()$/;"	f	signature:()
main	l1qc_test.cpp	/^int main()$/;"	f	signature:()
sigx	cvl1qc.cpp	/^	CvMat* sigx;$/;"	m	struct:__anon2	file:	access:public
userdata	cvl1qc.cpp	/^	void* userdata;$/;"	m	struct:__anon1	file:	access:public
userdata	cvl1qc.cpp	/^	void* userdata;$/;"	m	struct:__anon2	file:	access:public
